# ┌────────────────────────────────┐ #
# │             DATA               │ #
# └────────────────────────────────┘ #
# data_dir needs to at least have the following structure:
# <data_dir>/
# ├── attributes/
# │   └── attributes.csv
# └── time_series/
#     ├── xxxx.nc
#     └── ... (one .nc file for each site)
data_dir: "/nas/cee-water/cjgleason/ted/swot-ml/data/reservoirs"
# time_series_dir: #default 'time_series'
attributes_file: 'Ohio_attributes.csv' # Has to be within <data_dir>/attributes/

# Relative to data_dir. A plain text list of sites to use. One site per line.
train_basin_file: "metadata/site_lists/Ohio_random_train.txt"
test_basin_file: "metadata/site_lists/Ohio_random_test.txt"
graph_network_file: "metadata/Ohio_graph.json"
# Dictionary of exact column names in the netcdf files
features:
  # Daily (or consistent timescale) features in the netcdf files.
  dynamic:
    era5:
      - 'ssrd_mean'
      - 'strd_mean'
      - 'ro_mean'
      - 'sro_mean'
      - 'e_mean'
      - 'tp_mean'
      - 'sp_mean'
      - 'd2m_mean'
      - 't2m_mean'
      - 'fal_mean'
      - 'ssrd_var'
      - 'strd_var'
      - 'ro_var'
      - 'sro_var'
      - 'e_var'
      - 'tp_var'
      - 'sp_var'
      - 'd2m_var'
      - 't2m_var'
      - 'fal_var'
  # Static basin parameters from the csv file. If none, all are used.
  static:
    - 'dis_m3_pyr' # pour point discharge average
    - 'dis_m3_pmn' # pour point discharge minimum
    - 'dis_m3_pmx' # pour point discharge maximum
    - 'run_mm_syr' # subbasin runoff average
    - 'inu_pc_smn' # subbasin inundation percent minimum
    - 'inu_pc_smx' # subbasin inundation percent maximum
    - 'inu_pc_slt' # subbasin inundation percent long-term maximum
    - 'lka_pc_sse' # subbasin lake area extent (pct)
    - 'dor_pc_pva' # pour point degree of regulation
    - 'ria_ha_ssu' # subbasin river area sum
    - 'riv_tc_ssu' # subbasin river volume sum
    - 'gwt_cm_sav' # subbasin groundwater table depth average
    - 'ele_mt_sav' # subbasin elevation average
    - 'ele_mt_smn' # subbasin elevation minimum
    - 'ele_mt_smx' # subbasin elevation maximum
    - 'slp_dg_sav' # subbasin slope average
    - 'sgr_dk_sav' # subbasin stream gradient average
    - 'clz_cl_smj' # subbasin climate zone majority
    - 'cls_cl_smj' # subbasin climate strata majority
    - 'tmp_dc_syr' # subbasin temperature annual average
    - 'tmp_dc_smn' # subbasin temperature annual minimum
    - 'tmp_dc_smx' # subbasin temperature annual maximum
    - 'pre_mm_syr' # subbasin precipitation annual average
    - 'pet_mm_syr' # subbasin potential evaporation annual average
    - 'aet_mm_syr' # subbasin actual evaporation annual average
    - 'ari_ix_sav' # subbasin aridity index annual average 
    - 'snw_pc_syr' # subbasin snow cover extent annual average
    - 'snw_pc_smx' # subbasin snow cover extent annual maximum
    - 'glc_cl_smj' # subbasin land cover class spatial majority
    - 'pnv_cl_smj' # subbasin potential natural vegetation class spatial majority
    - 'wet_cl_smj' # subbasin wetland class spatial majority
    - 'wet_pc_sg1' # subbasin wetland class percent by class group
    - 'wet_pc_sg2' # subbasin wetland class percent by class group
    - 'for_pc_sse' # subbasin forest cover extent
    - 'crp_pc_sse' # subbasin cropland area extent
    - 'pst_pc_sse' # subbasin pasture area extent
    - 'ire_pc_sse' # subbasin irrigated area extent
    - 'gla_pc_sse' # subbasin glaciated area extent
    - 'prm_pc_sse' # subbasin permafrost area extent
    - 'pac_pc_sse' # subbasin protected area extent
    - 'tbi_cl_smj' # subbasin terrestrial biome class spatial majority
    - 'tec_cl_smj' # subbasin terrestrial ecoregions class spatial majority
    - 'fmh_cl_smj' # subbasin freshwater major habitat class spatial majority
    - 'fec_cl_smj' # subbasin freshwater ecoregions class spatial majority
    - 'cly_pc_sav' # subbasin clay fraction average
    - 'slt_pc_sav' # subbasin silt fraction average
    - 'snd_pc_sav' # subbasin sand fraction average
    - 'soc_th_sav' # subbasin soil organic carbon average
    - 'swc_pc_syr' # subbasin soil water content annual average
    - 'lit_cl_smj' # subbasin lithologic class spatial majority
    - 'kar_pc_sse' # subbasin karst area extent
    - 'ero_kh_sav' # subbasin soil erosion annual average
    - 'pop_ct_ssu' # subbasin population count
    - 'ppd_pk_sav' # subbasin population density average
    - 'urb_pc_sse' # subbasin urban area extent
    - 'nli_ix_sav' # subbasin nighttime lights average 
    - 'rdd_mk_sav' # subbasin road density average
    - 'hft_ix_s93' # subbasin human footprint 1993
    - 'hft_ix_s09' # subbasin human footprint 2009
    - 'gad_id_smj' # subbasin global adminimumistrative area majority
    - 'gdp_ud_sav' # subbasin gross domestic product average
    - 'gdp_ud_ssu' # subbasin gross domestic product sum
    - 'hdi_ix_sav' # subbasin human development index average
  target:
    - "discharge"

# Start and end of join train and test periods
time_slice: ["2020-01-01", "2024-12-31"]

log_norm_cols:
  - "discharge"
bitmask_cols:
  - 'clz_cl_smj' # subbasin climate zone majority
  - 'cls_cl_smj' # subbasin climate strata majority
  - 'glc_cl_smj' # subbasin land cover class spatial majority
  - 'pnv_cl_smj' # subbasin potential natural vegetation class spatial majority
  - 'wet_cl_smj' # subbasin wetland class spatial majority
  - 'tbi_cl_smj' # subbasin terrestrial biome class spatial majority
  - 'tec_cl_smj' # subbasin terrestrial ecoregions class spatial majority
  - 'fmh_cl_smj' # subbasin freshwater major habitat class spatial majority
  - 'fec_cl_smj' # subbasin freshwater ecoregions class spatial majority
  - 'lit_cl_smj' # subbasin lithologic class spatial majority
clip_feature_range:
  discharge: [0.1, null]
  
# ┌────────────────────────────────┐ #
# │           DataLoader           │ #
# └────────────────────────────────┘ #
shuffle: true
batch_size: 16
# train, or test
data_subset: "train"
# number of parallel cpus used for data loading
# 0 is faster than 1 when there are a small number of batches per epoch
num_workers: 1

# Static memory allocation for batches on device
pin_memory: false
# Ignores the final batch if it doesn't fit into batch_size
drop_last: true
# ┌────────────────────────────────┐ #
# │             Model              │ #
# └────────────────────────────────┘ #
# See list of valid models in models/__init__.py
sequence_length: 7
# Different for each model type.
model_args:
  name: "st_gat"
  hidden_size: 8
  k_hops: 2
  num_heads: 1
  dropout: 0.3
  seed: 0
  seq2seq: True
# ┌────────────────────────────────┐ #
# │            Trainer             │ #
# └────────────────────────────────┘ #
num_epochs: 3
# Parameters for lr scheduler (https://optax.readthedocs.io/en/latest/api/optimizer_schedules.html#optax.exponential_decay)
# learning_rate(epoch) = initial_lr * (decay_rate ** (epoch / num_epochs))
initial_lr: 0.001
decay_rate: 0.001
# Params passed to model steps during training.
step_kwargs:
  # mse, mae, or huber
  loss: "spin_up_nse"
  # (optional) gradient clipping to this norm
  max_grad_norm: 5
# ┌────────────────────────────────┐ #
# │            Outputs             │ #
# └────────────────────────────────┘ #
# Use to declutter the slurm output (mostly disables tqdm output)
quiet: false
# Whether to log training progress. Really only for testing purposes. 
log: true
# How frequently (in epochs) to save training progress
log_interval: 5
